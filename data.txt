Нужные функции
    Регистрация пользователя
        Валидация email / телефона
            проверка корректности номера или почты
        Хеширование пароля (например, bcrypt, Argon2)
        Подтверждение email/SMS (опционально)
    Аутентификация
        По логину и паролю
        По внешнему провайдеру (OAuth2 — Google, Facebook и т.д.)
        По токену (JWT, session)
    Выдача и валидация токенов
        Access token (короткоживущий)
        Refresh token (долгоживущий)
    Выход из системы
        Инвалидация токенов
        Очистка сессий
    Защита от атак
        Rate limiting
        Защита от брутфорса (например, через CAPTCHA, задержку)
        Защита CSRF и XSS
        CORS
    Роли и разрешения
        Роль администратора, пользователя, модератора и т.д.
        Политики доступа
    Аудит
        Логи входов, попыток, изменений данных и пр.

Go (Gin) — быстро и безопасно
PostgreSQL / MySQL — для пользователей, токенов
Redis — для хранения временных токенов, rate limiting
bcrypt / Argon2 — хеширование паролей
JWT — токены (auth + refresh)
Traefik / NGINX — TLS/SSL termination
Fail2Ban / Cloudflare — защита от атак
Traefik / NGINX — TLS/SSL termination


1. Модель (model) - определяет структуры данных
2. Репозиторий (repository) - работа с хранилищем данных
3. Сервис (service) - бизнес-логика
4. Обработчик/контроллер (handler) - API интерфейс

В jwt можно класть инфу (не важную) для получения без обращения к бд

fail2ban
https://github.com/go-chi/httprate

ctx context.Context позволяет ставить таймер операциям или отменять их